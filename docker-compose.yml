version: "3"

services:
  postgresql:
    image: postgres:latest
    container_name: postgresql
    restart: always
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: "dbpassword1!"
    networks:
      - DBs-network
    volumes:
        - ./psql_data:/var/lib/postgresql/data

  mysql:
    image: mysql:latest
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    expose:
      - 3306
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: "dbpassword1!"
    networks:
      - DBs-network

  # mongodb:
  #   image: mongo:4.4.0-bionic
  #   restart: always
  #   container_name: mongodb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: mongoroot
  #     MONGO_INITDB_ROOT_PASSWORD: dbpassword1!
  #     MONGO_INITDB_DATABASE: mongouser
  #     MONGO_INITDB_USERNAME: mongodb
  #     MONGO_INITDB_PASSWORD: dbpassword1!
  #   expose:
  #     - 27017
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - mongodb_data_folder:/data/db/
  #     - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh
  #   networks:
  #     - DBs-network

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    networks:
      - DBs-network
    expose:
      - 8080
    ports:
      - 8080:8080
    environment: 
      ADMINER_DEFAULT_SERVER: postgresql
      ADMINER_DESIGN: lucas-sandery
      ADMINER_PLUGINS: 'tables-filter tinymce dump-json frames dump-zip dump-date edit-calendar edit-textarea edit-foreign enum-option enum-types file-upload'
networks:
  DBs-network:

# volumes:
#   mongodb_data_folder:
